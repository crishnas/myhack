Build a real-time, single-page file and content search application using WinSurf (Python) and Streamlit.

Functional Requirements:
1. Allow users to select a root folder path and enter a search query.
2. Provide two search modes: 
   - File Name Search (match against file names)
   - Content Search (match query inside text files)
3. Show real-time results as they are found:
   - For file name match: show full path and file size
   - For content match: show file path, matched line number, and preview text
4. Provide search filters:
   - File type filter (e.g., .txt, .py, .md)
   - Case sensitivity toggle
   - Limit number of results

Architecture:
- Use WinSurf to stream file system traversal and search operations
- Emit each matched file/result as a stream event to the UI
- Use Streamlit to render a single-page interface with:
   - Sidebar for inputs and filters
   - Main panel for streaming results
   - Progress indicator and stats (e.g., total files scanned, matches found)

Technical Design:
- Use `os.scandir` or `os.walk` for recursive traversal
- Wrap traversal and matching logic into a WinSurf `Generator` or `Operator`
- Use `concurrent.futures.ThreadPoolExecutor` for parallel file read
- For content search, use `mmap` or buffered read for speed
- Stream results as JSON events with metadata
- Streamlit subscribes to updates and renders real-time matches

Performance Notes:
- Handle large directory trees efficiently (e.g., 100k+ files)
- Use chunked processing or batching
- Use debounce or throttling for rapid queries

Bonus:
- Option to download matched file
- Click to expand match context (e.g., Â±2 lines)
- Show "time taken" for search
